/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.41
 * Generated at: 2019-06-09 19:37:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.tiles;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class template_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/WEB-INF/lib/tiles-jsp-3.0.8.jar", Long.valueOf(1560108288478L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1559572009822L));
    _jspx_dependants.put("jar:file:/C:/Users/YOO/Downloads/board/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/piano/WEB-INF/lib/tiles-jsp-3.0.8.jar!/META-INF/tld/tiles-jsp.tld", Long.valueOf(1506773284000L));
    _jspx_dependants.put("jar:file:/C:/Users/YOO/Downloads/board/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/piano/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>제목</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        #header{            \r\n");
      out.write("            width:100%;\r\n");
      out.write("            height:50px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            background-color: aqua;\r\n");
      out.write("        }\r\n");
      out.write("        #left{\r\n");
      out.write("            float:left;\r\n");
      out.write("             width:15%;\r\n");
      out.write("            background-color: gray;\r\n");
      out.write("        }\r\n");
      out.write("        /* #main{\r\n");
      out.write("            float:left;\r\n");
      out.write("             width:85%;\r\n");
      out.write("            background-color: lime;\r\n");
      out.write("        } */\r\n");
      out.write("        #footer{\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            height: 50px;            \r\n");
      out.write("            text-align: center;\r\n");
      out.write("            background-color: orange;\r\n");
      out.write("            clear:both;\r\n");
      out.write("        }\r\n");
      out.write("         #left, #main{ \r\n");
      out.write("               min-height: 600px;\r\n");
      out.write("         } \r\n");
      out.write("    </style>\r\n");
      out.write("    \r\n");
      out.write("    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\"\r\n");
      out.write("\thref=\"/resources/css/common/common.css\" />\r\n");
      out.write("\r\n");
      out.write("<!-- 공통 JavaScript -->\r\n");
      out.write("<script type=\"text/javascript\" src=\"/resources/js/common/jquery.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t$(document).ready(function() {\r\n");
      out.write("\t\tgetBoardList();\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\t/* 게시판 - 상세 페이지 이동*/\r\n");
      out.write("\tfunction goBoardDetail(boardSeq) {\r\n");
      out.write("\t\tlocation.href = \"/board/boardDetail?boardSeq=\" + boardSeq;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t/* 게시판 - 작성 페이지 이동*/\r\n");
      out.write("\tfunction goBoardWrite() {\r\n");
      out.write("\t\tlocation.href = \"/board/boardWrite\";\r\n");
      out.write("\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t/* 게시판 - 목록 조회 */\r\n");
      out.write("\tfunction getBoardList(currentPageNo) {\r\n");
      out.write("\r\n");
      out.write("\t\tif (currentPageNo === undefined) {\r\n");
      out.write("\t\t\tcurrentPageNo = \"1\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t$(\"#current_page_no\").val(currentPageNo);\r\n");
      out.write("\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\ttype : \"POST\",\r\n");
      out.write("\t\t\turl : \"/board/getBoardList\",\r\n");
      out.write("\t\t\tdata : $(\"#boardForm\").serialize(),\r\n");
      out.write("\t\t\tdataType : \"JSON\",\r\n");
      out.write("\t\t\tcache : false,\r\n");
      out.write("\t\t\tasync : true,\r\n");
      out.write("\t\t\tsuccess : function(obj) {\r\n");
      out.write("\t\t\t\tgetBoardListCallback(obj);\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror : function(xhr, status, error) {\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tfunction getBoardListCallback(obj) {\r\n");
      out.write("\r\n");
      out.write("\t\tvar state = obj.state;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(state == \"SUCCESS\"){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar data = obj.data;\t\t\t\r\n");
      out.write("\t\t\tvar list = data.list;\r\n");
      out.write("\t\t\tvar listLen = list.length;\t\t\r\n");
      out.write("\t\t\tvar totalCount = data.totalCount;\r\n");
      out.write("\t\t\tvar pagination = data.pagination;\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\tvar str = \"\";\r\n");
      out.write("\r\n");
      out.write("\t\tif (listLen > 0) {\r\n");
      out.write("\r\n");
      out.write("\t\t\tfor (var a = 0; a < listLen; a++) {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar boardSeq = list[a].board_seq;\r\n");
      out.write("\t\t\t\tvar boardReRef = list[a].board_re_ref;\r\n");
      out.write("\t\t\t\tvar boardReLev = list[a].board_re_lev;\r\n");
      out.write("\t\t\t\tvar boardReSeq = list[a].board_re_seq;\r\n");
      out.write("\t\t\t\tvar boardWriter = list[a].board_writer;\r\n");
      out.write("\t\t\t\tvar boardSubject = list[a].board_subject;\r\n");
      out.write("\t\t\t\tvar boardContent = list[a].board_content;\r\n");
      out.write("\t\t\t\tvar boardHits = list[a].board_hits;\r\n");
      out.write("\t\t\t\tvar delYn = list[a].del_yn;\r\n");
      out.write("\t\t\t\tvar insUserId = list[a].ins_user_id;\r\n");
      out.write("\t\t\t\tvar insDate = list[a].ins_date;\r\n");
      out.write("\t\t\t\tvar updUserId = list[a].upd_user_id;\r\n");
      out.write("\t\t\t\tvar updDate = list[a].upd_date;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tstr += \"<tr>\";\r\n");
      out.write("\t\t\t\tstr += \"<td>\" + boardSeq + \"</td>\";\r\n");
      out.write("\t\t\t\tstr += \"<td onclick='javascript:goBoardDetail(\" + boardSeq\r\n");
      out.write("\t\t\t\t\t\t+ \");' style='cursor:Pointer'>\";\r\n");
      out.write("\t\t\t\tif(boardReLev > 0){\r\n");
      out.write("\t\t\t\t\tfor(var b=0; b<boardReLev; b++){\r\n");
      out.write("\t\t\t\t\t\tstr+=\"▶:\";\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tstr += boardSubject\t+ \"</td>\";\r\n");
      out.write("\t\t\t\tstr += \"<td>\" + boardHits + \"</td>\";\r\n");
      out.write("\t\t\t\tstr += \"<td>\" + boardWriter + \"</td>\";\r\n");
      out.write("\t\t\t\tstr += \"<td>\" + insDate + \"</td>\";\r\n");
      out.write("\t\t\t\tstr += \"</tr>\";\r\n");
      out.write("\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\r\n");
      out.write("\t\t\tstr += \"<tr>\";\r\n");
      out.write("\t\t\tstr += \"<td colspan='5'>등록된 글이 존재하지 않습니다.</td>\";\r\n");
      out.write("\t\t\tstr += \"<tr>\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t$(\"#tbody\").html(str);\r\n");
      out.write("\t\t$(\"#total_count\").text(totalCount);\r\n");
      out.write("\t\t$(\"#pagination\").html(pagination);\r\n");
      out.write("\t} else{\r\n");
      out.write("\t\talert(\"관리자에게 문의하세요.\");\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div style=\"width:100%; height:100%;\">\r\n");
      out.write("    <div id=\"header\">");
      if (_jspx_meth_tiles_005finsertAttribute_005f0(_jspx_page_context))
        return;
      out.write("</div>\r\n");
      out.write("    <div id=\"left\">");
      if (_jspx_meth_tiles_005finsertAttribute_005f1(_jspx_page_context))
        return;
      out.write("</div>\r\n");
      out.write("    <div id=\"main\">");
      if (_jspx_meth_tiles_005finsertAttribute_005f2(_jspx_page_context))
        return;
      out.write("</div>    \r\n");
      out.write("    <div id=\"footer\">");
      if (_jspx_meth_tiles_005finsertAttribute_005f3(_jspx_page_context))
        return;
      out.write("</div>\r\n");
      out.write("    </div>\r\n");
      out.write(" \r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("        $(function() {\r\n");
      out.write(" \r\n");
      out.write("        });    \r\n");
      out.write("    </script>    \r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write(" ");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_tiles_005finsertAttribute_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  tiles:insertAttribute
    org.apache.tiles.jsp.taglib.InsertAttributeTag _jspx_th_tiles_005finsertAttribute_005f0 = new org.apache.tiles.jsp.taglib.InsertAttributeTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_tiles_005finsertAttribute_005f0);
    try {
      _jspx_th_tiles_005finsertAttribute_005f0.setJspContext(_jspx_page_context);
      // /WEB-INF/tiles/template.jsp(156,21) name = name type = java.lang.String reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_tiles_005finsertAttribute_005f0.setName("header");
      _jspx_th_tiles_005finsertAttribute_005f0.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_tiles_005finsertAttribute_005f0);
    }
    return false;
  }

  private boolean _jspx_meth_tiles_005finsertAttribute_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  tiles:insertAttribute
    org.apache.tiles.jsp.taglib.InsertAttributeTag _jspx_th_tiles_005finsertAttribute_005f1 = new org.apache.tiles.jsp.taglib.InsertAttributeTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_tiles_005finsertAttribute_005f1);
    try {
      _jspx_th_tiles_005finsertAttribute_005f1.setJspContext(_jspx_page_context);
      // /WEB-INF/tiles/template.jsp(157,19) name = name type = java.lang.String reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_tiles_005finsertAttribute_005f1.setName("left");
      _jspx_th_tiles_005finsertAttribute_005f1.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_tiles_005finsertAttribute_005f1);
    }
    return false;
  }

  private boolean _jspx_meth_tiles_005finsertAttribute_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  tiles:insertAttribute
    org.apache.tiles.jsp.taglib.InsertAttributeTag _jspx_th_tiles_005finsertAttribute_005f2 = new org.apache.tiles.jsp.taglib.InsertAttributeTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_tiles_005finsertAttribute_005f2);
    try {
      _jspx_th_tiles_005finsertAttribute_005f2.setJspContext(_jspx_page_context);
      // /WEB-INF/tiles/template.jsp(158,19) name = name type = java.lang.String reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_tiles_005finsertAttribute_005f2.setName("body");
      _jspx_th_tiles_005finsertAttribute_005f2.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_tiles_005finsertAttribute_005f2);
    }
    return false;
  }

  private boolean _jspx_meth_tiles_005finsertAttribute_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  tiles:insertAttribute
    org.apache.tiles.jsp.taglib.InsertAttributeTag _jspx_th_tiles_005finsertAttribute_005f3 = new org.apache.tiles.jsp.taglib.InsertAttributeTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_tiles_005finsertAttribute_005f3);
    try {
      _jspx_th_tiles_005finsertAttribute_005f3.setJspContext(_jspx_page_context);
      // /WEB-INF/tiles/template.jsp(159,21) name = name type = java.lang.String reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_tiles_005finsertAttribute_005f3.setName("footer");
      _jspx_th_tiles_005finsertAttribute_005f3.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_tiles_005finsertAttribute_005f3);
    }
    return false;
  }
}
