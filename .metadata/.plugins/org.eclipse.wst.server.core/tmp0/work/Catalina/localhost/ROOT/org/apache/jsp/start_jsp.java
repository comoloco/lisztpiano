/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.41
 * Generated at: 2019-06-25 06:23:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class start_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<title>Liszt Main</title>\r\n");
      out.write("<style>\r\n");
      out.write("* { box-sizing:border-box; }\r\n");
      out.write("\r\n");
      out.write("body{ margin:0; background:white; }\r\n");
      out.write("ul {\r\n");
      out.write("    height:20em;  width:100%; text-aling:center;\r\n");
      out.write("  margin:5em auto;  padding:3em 0 0 600px;  position:relative; \r\n");
      out.write(" /*  border:1px solid #160801; */ border-radius:1em; \r\n");
      out.write("  /* background:-webkit-gradient(linear, right bottom, left top, color-stop(0%,rgba(0,0,0,0.3)), color-stop(100%,rgba(0,0,0,0))), url('https://f.cl.ly/items/2q1f3t0C3R1b0g081w3n/vwood.png');\r\n");
      out.write("box-shadow:0 0 50px rgba(0,0,0,0.5) inset, 0 1px rgba(212,152,125,0.2) inset,0 5px 15px rgba(0,0,0,0.5); */ }\r\n");
      out.write("li { display:inline-block; margin:0; padding:0; list-style:none; position:relative; float:left; }\r\n");
      out.write("\r\n");
      out.write("ul .white {\r\n");
      out.write("    height:20em; width:6.5em; z-index:1;\r\n");
      out.write("    border-left:1px solid #bbb;\r\n");
      out.write("    border-bottom:1px solid #bbb;\r\n");
      out.write("    border-radius:0 0 5px 5px;\r\n");
      out.write("    box-shadow:-1px 0 0 rgba(255,255,255,0.8) inset, 0 0 5px #ccc inset, 0 0 3px rgba(0,0,0,0.2);\r\n");
      out.write("    background: linear-gradient(top, #eee 0%,#fff 100%);\r\n");
      out.write("}\r\n");
      out.write(".white:hover {\r\n");
      out.write("    border-top:1px solid #777;\r\n");
      out.write("    border-left:1px solid #999;\r\n");
      out.write("    border-bottom:1px solid #999;\r\n");
      out.write("    box-shadow:2px 0 3px rgba(0,0,0,0.1) inset, -5px 5px 20px rgba(0,0,0,0.2) inset,0 0 3px rgba(0,0,0,0.2);\r\n");
      out.write("    background: linear-gradient(top, #fff 0%,#e9e9e9 100%);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("ul .white:active {\r\n");
      out.write("    border-top:1px solid #777;\r\n");
      out.write("    border-left:1px solid #999;\r\n");
      out.write("    border-bottom:1px solid #999;\r\n");
      out.write("    box-shadow:2px 0 3px rgba(0,0,0,0.1) inset, -5px 5px 20px rgba(0,0,0,0.2) inset,0 0 3px rgba(0,0,0,0.2);\r\n");
      out.write("    background: linear-gradient(top, #fff 0%,#e9e9e9 100%);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".black {\r\n");
      out.write("    height:10em; width:4.5em; margin:0 0 0 -1em; z-index:2;\r\n");
      out.write("    border:1px solid #000;\r\n");
      out.write("    border-radius:0 0 3px 3px;\r\n");
      out.write("    box-shadow:-1px -1px 2px rgba(255,255,255,0.2) inset, 0 -5px 2px 3px rgba(0,0,0,0.6) inset, 0 2px 4px rgba(0,0,0,0.5);\r\n");
      out.write("    background:linear-gradient(45deg, #222 0%,#555 100%);\r\n");
      out.write("}\r\n");
      out.write(".black:hover {\r\n");
      out.write("    box-shadow:-1px -1px 2px rgba(255,255,255,0.2) inset, 0 -2px 2px 3px rgba(0,0,0,0.6) inset, 0 1px 2px rgba(0,0,0,0.5);\r\n");
      out.write("    background:linear-gradient(left, #444 0%,#222 100%);\r\n");
      out.write("}\r\n");
      out.write(".black:active {\r\n");
      out.write("    box-shadow:-1px -1px 2px rgba(255,255,255,0.2) inset, 0 -2px 2px 3px rgba(0,0,0,0.6) inset, 0 1px 2px rgba(0,0,0,0.5);\r\n");
      out.write("    background:linear-gradient(left, #444 0%,#222 100%);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".a,.g,.f,.d,.c { margin:0 0 0 -3.325em;  }\r\n");
      out.write("\r\n");
      out.write("ul li:first-child { border-radius:5px 0 5px 5px; }\r\n");
      out.write("ul li:last-child { border-radius:0 5px 5px 5px; }\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<h1 style=\"text-align:center\">Liszt's Piano</h1>\r\n");
      out.write("<div style=\"position:absolute;\">\r\n");
      out.write("<ul class=\"set\" style=\"text-align:center\">\r\n");
      out.write("    <a class=\"white e hover_tag\" href=\"aboutUs\"><li class=\"white e\"><P style=\"color:black;padding-top:150px\">학</P><P style=\"color:black;\">원</P><P style=\"color:black;\">소</P><P style=\"color:black;\">개</P></li></a>\r\n");
      out.write("    <li class=\"black ds\"></li>\r\n");
      out.write("      <a href=\"#\" onclick=\"alert('로그인이 필요한 페이지 입니다.')\"><li class=\"white d\"><P style=\"color:black;padding-top:150px\">원</P><P style=\"color:black;\">생</P><P style=\"color:black;\">관</P><P style=\"color:black;\">리</P></li></a>\r\n");
      out.write("      <li class=\"black cs\"></li>\r\n");
      out.write("      <a href=\"curriculum\"><li class=\"white c\"><P style=\"color:black;padding-top:150px\">커</P><P style=\"color:black;\">리</P><P style=\"color:black;\">큘</P><P style=\"color:black;\">럼</P></li></a>\r\n");
      out.write(" <a href=\"admission\"> <li class=\"white b\"><P style=\"color:black;padding-top:150px\">수</P><P style=\"color:black;\">강</P><P style=\"color:black;\">신</P><P style=\"color:black;\">청</P></li></a>\r\n");
      out.write("  <li class=\"black as\"></li>\r\n");
      out.write("  <a href=\"#\" onclick=\"alert('준비중입니다.')\"><li class=\"white a\"><P style=\"color:black;padding-top:150px\">새</P><!-- <P style=\"color:black;\">&nbsp;</P> --><P style=\"color:black;\">소</P><P style=\"color:black;\">식</P></li></a>\r\n");
      out.write("  <li class=\"black gs\"></li>\r\n");
      out.write("  <a href=\"councel\"><li class=\"white g\"><P style=\"color:black;padding-top:150px\">문</P><P style=\"color:black;\">의</P><P style=\"color:black;\">상</P><P style=\"color:black;\">담</P></li></a>\r\n");
      out.write("  <li class=\"black fs\"></li>\r\n");
      out.write("  <a href=\"board/boardList\"><li class=\"white f\"><P style=\"color:black;padding-top:150px\">자</P><P style=\"color:black;\">료</P><P style=\"color:black;\">실</P></li></a>\r\n");
      out.write("</ul>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
