/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.41
 * Generated at: 2019-06-25 12:00:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.news;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class boardUpdate_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1559572009822L));
    _jspx_dependants.put("jar:file:/C:/Users/YOO/Downloads/board/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/piano/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/C:/Users/YOO/Downloads/board/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/piano/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>게시판 수정</title>\r\n");
    
    String boardSeq = request.getParameter("boardSeq");        

      out.write("\r\n");
      out.write(" \r\n");
      //  c:set
      org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
      boolean _jspx_th_c_005fset_005f0_reused = false;
      try {
        _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
        _jspx_th_c_005fset_005f0.setParent(null);
        // /WEB-INF/views/news/boardUpdate.jsp(13,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fset_005f0.setVar("boardSeq");
        // /WEB-INF/views/news/boardUpdate.jsp(13,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
        _jspx_th_c_005fset_005f0.setValue(boardSeq);
        int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
        if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
        _jspx_th_c_005fset_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
      }
      out.write(" <!-- 게시글 번호 -->\r\n");
      out.write(" \r\n");
      out.write("<!-- 공통 CSS -->\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/resources/css/common/common.css\"/>\r\n");
      out.write(" \r\n");
      out.write("<!-- 공통 JavaScript -->\r\n");
      out.write("<script type=\"text/javascript\" src=\"/resources/js/common/jquery.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"/resources/js/common/jquery.form.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("    \r\n");
      out.write("    $(document).ready(function(){        \r\n");
      out.write("        getBoardDetail();        \r\n");
      out.write("    });\r\n");
      out.write("    \r\n");
      out.write("    /** 게시판 - 목록 페이지 이동 */\r\n");
      out.write("    function goBoardList(){                \r\n");
      out.write("        location.href = \"/news/boardList\";\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    /** 게시판 - 상세 조회  */\r\n");
      out.write("    function getBoardDetail(boardSeq){\r\n");
      out.write("        \r\n");
      out.write("        var boardSeq = $(\"#board_seq\").val();\r\n");
      out.write(" \r\n");
      out.write("        if(boardSeq != \"\"){\r\n");
      out.write("            \r\n");
      out.write("            $.ajax({    \r\n");
      out.write("                \r\n");
      out.write("                url        : \"/news/getBoardDetail\",\r\n");
      out.write("                data    : $(\"#boardForm\").serialize(),\r\n");
      out.write("                dataType: \"JSON\",\r\n");
      out.write("                cache   : false,\r\n");
      out.write("                async   : true,\r\n");
      out.write("                type    : \"POST\",    \r\n");
      out.write("                success : function(obj) {\r\n");
      out.write("                    getBoardDetailCallback(obj);                \r\n");
      out.write("                },           \r\n");
      out.write("                error     : function(xhr, status, error) {}\r\n");
      out.write("                \r\n");
      out.write("             });\r\n");
      out.write("            \r\n");
      out.write("        } else {\r\n");
      out.write("            alert(\"오류가 발생했습니다.\\n관리자에게 문의하세요.\");\r\n");
      out.write("        }    \r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    /** 게시판 - 상세 조회  콜백 함수 */\r\n");
      out.write("    function getBoardDetailCallback(obj){\r\n");
      out.write("        \r\n");
      out.write("        var str = \"\";\r\n");
      out.write("        \r\n");
      out.write("        if(obj != null){                                \r\n");
      out.write("                            \r\n");
      out.write("            var boardSeq        = obj.board_seq; \r\n");
      out.write("            var boardReRef         = obj.board_re_ref; \r\n");
      out.write("            var boardReLev         = obj.board_re_lev; \r\n");
      out.write("            var boardReSeq         = obj.board_re_seq; \r\n");
      out.write("            var boardWriter     = obj.board_writer; \r\n");
      out.write("            var boardSubject     = obj.board_subject; \r\n");
      out.write("            var boardContent     = obj.board_content; \r\n");
      out.write("            var boardHits         = obj.board_hits;\r\n");
      out.write("            var delYn             = obj.del_yn; \r\n");
      out.write("            var insUserId         = obj.ins_user_id;\r\n");
      out.write("            var insDate         = obj.ins_date; \r\n");
      out.write("            var updUserId         = obj.upd_user_id;\r\n");
      out.write("            var updDate         = obj.upd_date;\r\n");
      out.write("            var files\t\t\t= obj.files;\r\n");
      out.write("            var filesLen\t\t= files.length;\r\n");
      out.write("                    \r\n");
      out.write("            $(\"#board_subject\").val(boardSubject);            \r\n");
      out.write("            $(\"#board_content\").val(boardContent);\r\n");
      out.write("            $(\"#board_writer\").text(boardWriter);\r\n");
      out.write("            \r\n");
      out.write("            var fileStr =\"\";\r\n");
      out.write("            \r\n");
      out.write("            if(filesLen > 0){\r\n");
      out.write("            \t\r\n");
      out.write("            \tfor(var a=0; a<filesLen; a++){\r\n");
      out.write("            \t\t\r\n");
      out.write("            \t\tvar boardSeq    = files[a].board_seq;\r\n");
      out.write("                    var fileNo         = files[a].file_no;\r\n");
      out.write("                    var fileNameKey = files[a].file_name_key;\r\n");
      out.write("                    var fileName     = files[a].file_name;\r\n");
      out.write("                    var filePath     = files[a].file_path;\r\n");
      out.write("                    var fileSize     = files[a].file_size;\r\n");
      out.write("                    var remark         = files[a].remark;\r\n");
      out.write("                    var delYn         = files[a].del_yn;\r\n");
      out.write("                    var insUserId     = files[a].ins_user_id;\r\n");
      out.write("                    var insDate     = files[a].ins_date;\r\n");
      out.write("                    var updUserId     = files[a].upd_user_id;\r\n");
      out.write("                    var updDate     = files[a].upd_date;\r\n");
      out.write("                    \r\n");
      out.write("                    fileStr += \"<a href='/news/fileDownload?fileNameKey=\"+encodeURI(fileNameKey)+\"&fileName=\"+encodeURI(fileName)+\"&filePath=\"+encodeURI(filePath)+\"'>\" + fileName + \"</a>\";\r\n");
      out.write("                    fileStr += \"<button type='button' class='btn black ml15' style='padding:3px 5px 6px 5px;' onclick='javascript:setDeleteFile(\"+ boardSeq +\", \"+ fileNo +\")'>X</button>\";\r\n");
      out.write("                }            \r\n");
      out.write("                                \r\n");
      out.write("            } else {\r\n");
      out.write("                \r\n");
      out.write("                fileStr = \"<input type='file' id='files[0]' name='files[0]' value=''></td>\";\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            $(\"#file_td\").html(fileStr);\r\n");
      out.write("            \r\n");
      out.write("        } else {            \r\n");
      out.write("            alert(\"등록된 글이 존재하지 않습니다.\");\r\n");
      out.write("            return;\r\n");
      out.write("        }        \r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    /** 게시판 - 수정  */\r\n");
      out.write("    function updateBoard(){\r\n");
      out.write(" \r\n");
      out.write("        var boardSubject = $(\"#board_subject\").val();\r\n");
      out.write("        var boardContent = $(\"#board_content\").val();\r\n");
      out.write("            \r\n");
      out.write("        if (boardSubject == \"\"){            \r\n");
      out.write("            alert(\"제목을 입력해주세요.\");\r\n");
      out.write("            $(\"#board_subject\").focus();\r\n");
      out.write("            return;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        if (boardContent == \"\"){            \r\n");
      out.write("            alert(\"내용을 입력해주세요.\");\r\n");
      out.write("            $(\"#board_content\").focus();\r\n");
      out.write("            return;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        var yn = confirm(\"게시글을 수정하시겠습니까?\");        \r\n");
      out.write("        if(yn){\r\n");
      out.write("                \r\n");
      out.write("            var filesChk = $(\"input[name='files[0]']\").val();\r\n");
      out.write("            if(filesChk == \"\"){\r\n");
      out.write("                $(\"input[name='files[0]']\").remove();\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            $(\"#boardForm\").ajaxForm({\r\n");
      out.write("            \r\n");
      out.write("                url        : \"/news/updateBoard\",\r\n");
      out.write("                enctype    : \"multipart/form-data\",\r\n");
      out.write("                cache   : false,\r\n");
      out.write("                async   : true,\r\n");
      out.write("                type    : \"POST\",                         \r\n");
      out.write("                success : function(obj) {\r\n");
      out.write("                    updateBoardCallback(obj);                \r\n");
      out.write("                },           \r\n");
      out.write("                error     : function(xhr, status, error) {}\r\n");
      out.write("                \r\n");
      out.write("            }).submit();\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    /** 게시판 - 수정 콜백 함수 */\r\n");
      out.write("    function updateBoardCallback(obj){\r\n");
      out.write("    \r\n");
      out.write("        if(obj != null){        \r\n");
      out.write("            \r\n");
      out.write("            var result = obj.result;\r\n");
      out.write("            \r\n");
      out.write("            if(result == \"SUCCESS\"){                \r\n");
      out.write("                alert(\"게시글 수정을 성공하였습니다.\");                \r\n");
      out.write("                goBoardList();                 \r\n");
      out.write("            } else {                \r\n");
      out.write("                alert(\"게시글 수정을 실패하였습니다.\");    \r\n");
      out.write("                return;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    /** 게시판 - 삭제할 첨부파일 정보 */\r\n");
      out.write("    function setDeleteFile(boardSeq, fileSeq){\r\n");
      out.write("        \r\n");
      out.write("        var deleteFile = boardSeq + \"!\" + fileSeq;        \r\n");
      out.write("        $(\"#delete_file\").val(deleteFile);\r\n");
      out.write("                \r\n");
      out.write("        var fileStr = \"<input type='file' id='files[0]' name='files[0]' value=''>\";        \r\n");
      out.write("        $(\"#file_td\").html(fileStr);        \r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div id=\"wrap\">\r\n");
      out.write("\r\n");
      out.write("    <div id=\"container\">\r\n");
      out.write("        <div class=\"inner\">    \r\n");
      out.write("            <h2>게시글 상세</h2>\r\n");
      out.write("            <form id=\"boardForm\" name=\"boardForm\">    \r\n");
      out.write("                <table width=\"100%\" class=\"table02\">\r\n");
      out.write("                <caption><strong><span class=\"t_red\">*</span> 표시는 필수입력 항목입니다.</strong></caption>\r\n");
      out.write("                    <colgroup>\r\n");
      out.write("                         <col width=\"20%\">\r\n");
      out.write("                        <col width=\"*\">\r\n");
      out.write("                    </colgroup>\r\n");
      out.write("                    <tbody id=\"tbody\">\r\n");
      out.write("                       <tr>\r\n");
      out.write("                            <th>제목<span class=\"t_red\">*</span></th>\r\n");
      out.write("                            <td><input id=\"board_subject\" name=\"board_subject\" value=\"\" class=\"tbox01\"/></td>\r\n");
      out.write("                        </tr>\r\n");
      out.write("                         <tr>\r\n");
      out.write("                            <th>작성자</th>\r\n");
      out.write("                            <td id=\"board_writer\"><input id=\"board_writer\" name=\"board_writer\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginInfo.get('uid')}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\treadOnly class=\"tbox01\" /></td>\r\n");
      out.write("                        </tr>\r\n");
      out.write("                        <tr>\r\n");
      out.write("                            <th>내용<span class=\"t_red\">*</span></th>\r\n");
      out.write("                            <td colspan=\"3\"><textarea id=\"board_content\" name=\"board_content\" cols=\"50\" rows=\"5\" class=\"textarea01\"></textarea></td>\r\n");
      out.write("                        </tr>\r\n");
      out.write("                        <tr>\r\n");
      out.write("                            <th>첨부파일</th>\r\n");
      out.write("                            <td colspan=\"3\" id=\"file_td\"><input type=\"file\" id=\"files[0]\" name=\"files[0]\" value=\"\"></td>\r\n");
      out.write("                        </tr>\r\n");
      out.write("                    </tbody>\r\n");
      out.write("                </table>    \r\n");
      out.write("                <input type=\"hidden\" id=\"board_seq\"        name=\"board_seq\"    value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardSeq}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"/> <!-- 게시글 번호 -->\r\n");
      out.write("                <input type=\"hidden\" id=\"search_type\"    name=\"search_type\"    value=\"U\"/> <!-- 조회 타입 - 상세(S)/수정(U) -->\r\n");
      out.write("            \t<input type=\"hidden\" id=\"delete_file\"    name=\"delete_file\"    value=\"\"/> <!-- 삭제할 첨부파일 -->\r\n");
      out.write("            </form>\r\n");
      out.write("            <div class=\"btn_right mt15\">\r\n");
      out.write("                <button type=\"button\" class=\"btn black mr5\" onclick=\"javascript:goBoardList();\">목록으로</button>\r\n");
      out.write("                <button type=\"button\" class=\"btn black\" onclick=\"javascript:updateBoard();\">수정하기</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("  ");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
